apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
    control-plane: controller-manager
  name: gitea-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: gitea.hyperspike.io
spec:
  group: hyperspike.io
  names:
    kind: Gitea
    listKind: GiteaList
    plural: gitea
    singular: gitea
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.hostname
      name: Hostname
      priority: 1
      type: string
    - jsonPath: .spec.rootless
      name: Rootless
      priority: 1
      type: boolean
    - jsonPath: .spec.image
      name: Image
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Gitea is the Schema for the gitea API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GiteaSpec defines the desired state of Gitea
            properties:
              externalSSH:
                description: Create a loadbalancer for ssh access
                type: boolean
              image:
                default: gitea/gitea:1.22.1
                description: Override the operator set image
                type: string
              ingress:
                description: Ingress for external access
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Ingress Annotations
                    type: object
                  host:
                    description: External Hostname of the instance
                    example: git.local
                    type: string
                type: object
              prometheus:
                default: false
                description: enable prometheus integrations
                type: boolean
              rootless:
                default: false
                description: enable rootless mode, disable for minikube
                type: boolean
              sshHostname:
                description: if different from Hostname
                type: string
              valkey:
                default: false
                description: Use Valkey
                type: boolean
            type: object
          status:
            description: GiteaStatus defines the observed state of Gitea
            properties:
              conditions:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: orgs.hyperspike.io
spec:
  group: hyperspike.io
  names:
    kind: Org
    listKind: OrgList
    plural: orgs
    singular: org
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Org is the Schema for the orgs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrgSpec defines the desired state of Org
            properties:
              description:
                description: A brief explanation of the organization.
                type: string
              fullname:
                description: The human readable name of the organization.
                type: string
              instance:
                description: the gitea instance to build the org in
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              location:
                description: The physical location of the org, if any
                type: string
              teams:
                description: users list to
                items:
                  properties:
                    createOrgRepo:
                      type: boolean
                    description:
                      type: string
                    includeAllRepos:
                      type: boolean
                    members:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    permission:
                      enum:
                      - none
                      - read
                      - write
                      - admin
                      - owner
                      type: string
                    units:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              visibility:
                description: The ACL name of the org. public, private, etc.
                type: string
              website:
                description: The url of the website associated with this org.
                type: string
            required:
            - instance
            type: object
          status:
            description: OrgStatus defines the observed state of Org
            properties:
              provisioned:
                type: boolean
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: repoes.hyperspike.io
spec:
  group: hyperspike.io
  names:
    kind: Repo
    listKind: RepoList
    plural: repoes
    singular: repo
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Repo is the Schema for the repoes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepoSpec defines the desired state of Repo
            properties:
              auto_init:
                description: Whether the repository should be auto-intialized?
                type: boolean
              default_branch:
                description: DefaultBranch of the repository (used when initializes
                  and in template)
                type: string
              description:
                description: a brief explanation of the repo
                type: string
              gitignores:
                description: Gitignores to use
                type: string
              issue_labels:
                description: Issue Label set to use
                type: string
              license:
                description: License to use
                type: string
              org:
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              private:
                description: Whether the repository is private
                type: boolean
              readme:
                description: Readme of the repository to create
                type: string
              template:
                description: Whether the repository is template
                type: boolean
              trust_model:
                description: TrustModel of the repository
                type: string
              user:
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
            type: object
          status:
            description: RepoStatus defines the observed state of Repo
            properties:
              provisioned:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: boolean
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: runners.hyperspike.io
spec:
  group: hyperspike.io
  names:
    kind: Runner
    listKind: RunnerList
    plural: runners
    singular: runner
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Runner is the Schema for the runners API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RunnerSpec defines the desired state of Runner
            properties:
              instance:
                description: the gitea instance to create global runners in
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              org:
                description: The Gitea Org to create org runners in
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              replicas:
                default: 1
                type: integer
              rootless:
                default: false
                type: boolean
            required:
            - replicas
            - rootless
            type: object
          status:
            description: RunnerStatus defines the observed state of Runner
            properties:
              provisioned:
                type: boolean
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: users.hyperspike.io
spec:
  group: hyperspike.io
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              email:
                type: string
              fullName:
                type: string
              instance:
                description: the gitea instance to add the user to
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              loginName:
                type: string
              password:
                description: a secret reference to the secret where the password is
                  stored
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      TODO: Add other useful fields. apiVersion, kind, uid?
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              sendNotify:
                default: false
                type: boolean
              sourceId:
                format: int64
                type: integer
              sshkeys:
                description: a string list of public ssh keys
                items:
                  type: string
                type: array
              visibility:
                type: string
            required:
            - email
            - instance
            type: object
          status:
            description: UserStatus defines the observed state of User
            properties:
              provisioned:
                type: boolean
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-controller-manager
  namespace: gitea-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-leader-election-role
  namespace: gitea-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-gitea-editor-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - gitea
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - gitea/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-gitea-viewer-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - gitea
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - gitea/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitea-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - acid.zalan.do
  resources:
  - postgresqls
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - hyperspike.io
  resources:
  - gitea
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - gitea/finalizers
  verbs:
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - gitea/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - orgs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - orgs/finalizers
  verbs:
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - orgs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - repoes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - repoes/finalizers
  verbs:
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - repoes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - runners
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - runners/finalizers
  verbs:
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - runners/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - hyperspike.io
  resources:
  - valkeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-org-editor-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - orgs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - orgs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-org-viewer-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - orgs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - orgs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-repo-editor-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - repoes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - repoes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-repo-viewer-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - repoes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - repoes/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-runner-editor-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - runners
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - runners/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-runner-viewer-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - runners
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - runners/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-user-editor-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - users/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-user-viewer-role
rules:
- apiGroups:
  - hyperspike.io
  resources:
  - users
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - hyperspike.io
  resources:
  - users/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-leader-election-rolebinding
  namespace: gitea-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitea-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: gitea-operator-controller-manager
  namespace: gitea-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
  name: gitea-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitea-operator-manager-role
subjects:
- kind: ServiceAccount
  name: gitea-operator-controller-manager
  namespace: gitea-operator-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: gitea-operator
    control-plane: controller-manager
  name: gitea-operator-controller-manager
  namespace: gitea-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/hyperspike/gitea-operator:v0.0.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gitea-operator-controller-manager
      terminationGracePeriodSeconds: 10
